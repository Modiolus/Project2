<?xml version="1.0" encoding="UTF-8"?>

<!--часть файла из курса Stepurko-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--       xsi:schemaLocation="http://www.springframework.org/schema/beans-->
<!--    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">-->

<!--Часть файла из Udemy - похоже,что она лучше-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!--Строка показывающая Спрингу на properties файл-->
    <context:property-placeholder location="classpath:myApp.properties"/>
<!--    id="myPet" это идентификатор бина. Название мы придумываем сами-->
    <bean id="myPet"
          class="com.spring.udemy_Zaur.Dog"
          scope="prototype"
          init-method="init"
          destroy-method="destroy">
    </bean>

    <bean id="myPerson"
          class="com.spring.udemy_Zaur.Person">
        <!--        Внедрение зависимостей через конструктор(аргументы). В таком случае, конструктор должн быть с параметрами - НЕ пустой    -->
        <!--        <constructor-arg ref="myPet"/>-->

        <!--  Ниже внедрение завсимостей через сеттер. В таком случае, в конструкторе не должно быть параметров.
        Spring меняет первую букву на Р и добавляет set. property name="pet" вызывает метод setPet-->
        <!--        После чего сетит myPet в сеттер-->
        <!--        ВАЖНО называть проперти name с маленькой буквы р. myPet в этом случае это id бина(id одного бина и ref должны совпадать)-->
        <property name="pet" ref="myPet"/>
        <!--Обязательно пишем сторку выше <property name="pet" ref="myPet"/> Если хотим что-то вывести что включает pet-->

        <!--  Ниже внедрение зависимостей через сеттер посредством properties файла
        В пропертис файле можно писать любое ключ значение и оно засетится соответственно в параметр метода setSurname-->
        <property name="surname" value="${person.surname}"/>
        <property name="age" value="${person.age}"/>
<!--   в коде выше в значение value можно писать просто в "" значение. Это вариант без проперти файла-->

    </bean>

    <bean id="myCat"
          class="com.spring.udemy_Zaur.Cat"/>

    <bean id="test"
          class="com.spring.Test"
          scope="prototype"
          init-method="init"/>
    <!--          destroy-method="destroy"-->

    <!--    />-->

    <bean id="say"
          class="com.spring.Say"
          init-method="init"
          scope="prototype"
          destroy-method="destroy"/>

    <bean id="springHelloWorld"
          class="com.spring.SpringHelloWorld"
          init-method="init"
          destroy-method="getHelloMessage"
          scope="prototype"
          name="helloWorld">
        <property name="helloMessage" value="Hello World!"/>
        <property name="user" ref="teacher"/>
        <property name="student" ref="student"/>
    </bean>

    <bean id="student"
          class="com.spring.Student"
          scope="prototype"
          init-method="start">
        <property name="lastName" value="Ivan"/>
        <property name="firstName" value="Ivanov"/>
        <property name="date" value="20200222"/>
        <property name="email" value="mail@mail.com"/>
    </bean>

    <bean id="teacher"
          class="com.spring.Teacher"
          scope="singleton">
        <property name="lastName" value="Sidr"/>
        <property name="firstName" value="Sidorov"/>
        <property name="phone" value="0505055050"/>
    </bean>
</beans>