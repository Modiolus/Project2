<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
    <session-factory>
        <property name="connection.driver_class">com.mysql.cj.jdbc.Driver</property>
        <property name="dialect">org.hibernate.dialect.MySQLDialect</property>

        <!-- Assume mydb is the database name -->
        <property name="connection.url">jdbc:mysql://localhost:3306/hillel?serverTimezone=UTC</property>
        <property name="connection.username">root</property>
        <property name="connection.password">root</property>

        <property name="show_sql">true</property>
        <property name="format_sql">true</property>
        <property name="connection.autocommit">true</property>
        <!--		<property name="hbm2ddl.auto">create</property>-->
        <property name="hbm2ddl.auto">update</property>
        <!--		<property name="hbm2ddl.auto">validate</property>-->
        <!--		<property name="hbm2ddl.auto">create-drop</property>-->

        <!--		create :- create the schema, the data previously present (if there) in the schema is lost-->
        <!--		update:- update the schema with the given values.-->
        <!--		validate:- validate the schema. It makes no change in the DB.-->
        <!--		create-drop:- create the schema with destroying the data previously present(if there). It also drop the database schema when the SessionFactory is closed.-->

        <!-- JDBC connection pool (use the built-in) -->
        <property name="connection.pool_size">1</property>
        <property name="current_session_context_class">thread</property>

        <mapping class="com.projects.example.hibernate.base.entity.User"/>
        <mapping class="com.projects.example.hibernate.base.entity.UserShort"/>
        <!--		<mapping class="com.projects.example.hibernate.base.entity.Address" />-->

    </session-factory>
</hibernate-configuration>

        <!--hibernate.hbm2ddl.auto

        В соответствии с документацией он может иметь четыре допустимых значения:

        создать | обновление | Проверить | создать падение

        Ниже приводится объяснение поведения, показанного этими значениями:

        create: - создать схему, данные, ранее присутствующие (если есть) в схеме потеряны
        update: - обновить схему с указанными значениями.
        validate: - проверить схему. Он не вносит изменений в БД.
        create-drop: создать схему с уничтожением ранее представленных данных (если есть). Он также удаляет схему базы данных, когда SessionFactory закрывается.
        Ниже перечислены важные моменты:

        В случае обновления, если схема отсутствует в БД, тогда создается схема.
        В случае проверки, если схема не существует в БД, она не создается. Вместо этого он выдаст ошибку: - Table not found:<table name>
        В случае create-drop при закрытии сеанса схема не будет удалена. Он падает только при закрытии SessionFactory.
        Если я даю какое-либо значение этому свойству (скажем, abc, а не выше четырех значений, рассмотренных выше), либо он просто оставлен пустым. Он показывает следующее поведение:

        -Если схема отсутствует в БД: - она создает схему

        -Если схема присутствует в БД: - Обновить схему.-->
